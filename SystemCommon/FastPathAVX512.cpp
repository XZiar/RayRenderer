#include "common/CommonRely.hpp"
#if COMMON_COMPILER_GCC
#   pragma GCC push_options
#   pragma GCC target("avx512f", "avx512vl", "avx512bw", "avx512dq")
#elif COMMON_COMPILER_CLANG
#   pragma clang attribute push (__attribute__((target("avx512f,avx512vl,avx512bw,avx512dq"))), apply_to=function)
#endif

#define COMMON_SIMD_LV 320
#include "common/simd/SIMD.hpp"

#include "CopyExIntrin.inl"
#include "MiscIntrins.inl"


DEFINE_FASTPATH_PARTIAL(CopyManager, AVX512)
{
    //REGISTER_FASTPATH_VARIANTS(Broadcast2, SIMD256, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(Broadcast4, SIMD256, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(ZExtCopy12, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(ZExtCopy14, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(ZExtCopy24, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(ZExtCopy28, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(ZExtCopy48, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(SExtCopy12, SIMDAVX2, SIMDSSE41, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(SExtCopy14, SIMDAVX2, SIMDSSE41, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(SExtCopy24, SIMDAVX2, SIMDSSE41, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(SExtCopy28, SIMDAVX2, SIMDSSE41, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(SExtCopy48, SIMDAVX2, SIMDSSE41, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(TruncCopy21, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(TruncCopy41, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(TruncCopy42, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(TruncCopy81, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(TruncCopy82, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(TruncCopy84, SIMDAVX2, SIMDSSSE3, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtI32F32, SIMD256,  SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtI16F32, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtI8F32,  SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtU32F32, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtU16F32, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtU8F32,  SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtF32I32, SIMD256,  SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtF32I16, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtF32I8,  SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtF32U16, SIMDAVX2, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtF32U8,  SIMDAVX2, SIMD128);
    REGISTER_FASTPATH_VARIANTS(CvtF16F32, AVX512F);
    REGISTER_FASTPATH_VARIANTS(CvtF32F16, AVX512F);
    //REGISTER_FASTPATH_VARIANTS(CvtF32F64, SIMD256, SIMD128);
    //REGISTER_FASTPATH_VARIANTS(CvtF64F32, SIMD256, SIMD128);
}

//DEFINE_FASTPATH_PARTIAL(MiscIntrins, AVX512)
//{
//    REGISTER_FASTPATH_VARIANTS(LeadZero32, );
//    REGISTER_FASTPATH_VARIANTS(LeadZero64, );
//    REGISTER_FASTPATH_VARIANTS(TailZero32, );
//    REGISTER_FASTPATH_VARIANTS(TailZero64, );
//    REGISTER_FASTPATH_VARIANTS(PopCount32, );
//    REGISTER_FASTPATH_VARIANTS(PopCount64, );
//    REGISTER_FASTPATH_VARIANTS(Hex2Str, );
//    REGISTER_FASTPATH_VARIANTS(PauseCycles, );
//}

//DEFINE_FASTPATH_PARTIAL(DigestFuncs, AVX512)
//{
//    REGISTER_FASTPATH_VARIANTS(Sha256, );
//}
