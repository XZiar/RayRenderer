#include "common/CommonRely.hpp"

#define COMMON_SIMD_LV_NAMESPACE 1
#define COMMON_SIMD_LV 42
#if COMMON_COMPILER_MSVC
#   define __SSE4_2__ 1
#   define __SSE4_1__ 1
#   define __SSSE3__  1
#   define __SSE3__   1
#endif
#include "common/simd/SIMD.hpp"
#if COMMON_SIMD_LV_ < COMMON_SIMD_LV
#   error requires SIMDLV >= 42
#endif
#include "common/simd/SIMD128.hpp"

#include "CopyExIntrin.inl"
#include "MiscIntrins.inl"


DEFINE_FASTPATH_PARTIAL(CopyManager, SSE42)
{
    REGISTER_FASTPATH_VARIANTS(Broadcast2, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(Broadcast4, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(ZExtCopy12, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(ZExtCopy14, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(ZExtCopy24, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(ZExtCopy28, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(ZExtCopy48, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(SExtCopy12, SIMDSSE41, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(SExtCopy14, SIMDSSE41, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(SExtCopy24, SIMDSSE41, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(SExtCopy28, SIMDSSE41, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(SExtCopy48, SIMDSSE41, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(TruncCopy21, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(TruncCopy41, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(TruncCopy42, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(TruncCopy81, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(TruncCopy82, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(TruncCopy84, SIMDSSSE3, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtI32F32, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtI16F32, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtI8F32,  SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtU32F32, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtU16F32, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtU8F32,  SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32I32, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32I16, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32I8,  SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32U16, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32U8,  SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF16F32, SIMDSSE41, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32F16, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF32F64, SIMD128, LOOP);
    REGISTER_FASTPATH_VARIANTS(CvtF64F32, SIMD128, LOOP);
}

DEFINE_FASTPATH_PARTIAL(MiscIntrins, SSE42)
{
    REGISTER_FASTPATH_VARIANTS(LeadZero32, LZCNT, COMPILER);
    REGISTER_FASTPATH_VARIANTS(LeadZero64, LZCNT, COMPILER);
    REGISTER_FASTPATH_VARIANTS(TailZero32, TZCNT, COMPILER);
    REGISTER_FASTPATH_VARIANTS(TailZero64, TZCNT, COMPILER);
    REGISTER_FASTPATH_VARIANTS(PopCount32, POPCNT, COMPILER, NAIVE);
    REGISTER_FASTPATH_VARIANTS(PopCount64, POPCNT, COMPILER, NAIVE);
    REGISTER_FASTPATH_VARIANTS(Hex2Str, SIMDSSSE3, SIMD128, NAIVE);
    REGISTER_FASTPATH_VARIANTS(PauseCycles, WAITPKG, SSE2, COMPILER);
}

DEFINE_FASTPATH_PARTIAL(DigestFuncs, SSE42)
{
    REGISTER_FASTPATH_VARIANTS(Sha256, SHA2, SHANI, NAIVE);
}
